// 값이 변경이 되었지만 화살표가 달라지지 않았고
let arr1 = [1, 2, 3];
let arr2 = arr1;
console.log(arr2); //[1, 2, 3]

arr1[0] = 10;
// arr1 = [10, 20];
console.log(arr2); //[10, 2, 3]

// 비교해보세요.
// 값이 변경이 되었고 화살표도 달라졌습니다.
let value1 = 10;
let value2 = value1;
console.log(value2); //10

value1 = 20;
console.log(value2); //10


// 원시타입의 불변성​
// 1. 기존에 메모리에 생성된 값들은 그 자체가 변경될 수 없다.

// 2. 그저 변수와 연결되어 있는 메모리가 바꼈기에(화살표가 바꼈기에) 생성된 값들이 변경된것처럼 보이는거다.


// 값이 변경되는게 아니라 화살표 즉 값이 저장된 메모리를 가르키는 화살표위치가 바뀐 것

// value2 -> value1 -> 10 (즉, value2 -> 10)
//  value1 = 20을 하면서 10값이 저장된 메모리를 가르키던 value1이 20을 저장하는 메모리를 가르키지만
// value2는 계속해서 10을 가르키고 있기 때문에 변경 없다.ㅊ